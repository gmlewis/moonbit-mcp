package "gmlewis/mcp"

import(
  "gmlewis/jsonrpc2"
)

// Values
const MCP_VERSION : String = "2025-03-26"

fn clock_gettime(Int, TimeSpec) -> Int

fn get_char() -> Byte

fn put_char(Byte) -> Unit

fn raw_audio(AudioContent) -> Bytes!

fn raw_data(BlobResourceContents) -> Bytes!

fn raw_image(ImageContent) -> Bytes!

fn restore_terminal() -> Unit

fn set_raw_mode() -> Unit

fn unix_nanos() -> Int64

// Types and methods
pub(all) struct Annotations {
  audience : Array[Role]?
  priority : Double?
}
impl Annotations {
  new(audience? : Array[Role], priority? : Double) -> Self
}
impl Eq for Annotations
impl Show for Annotations
impl ToJson for Annotations
impl @moonbitlang/core/json.FromJson for Annotations

pub(all) struct AudioContent {
  annotations : Annotations?
  data : String
  mimeType : String
}
impl AudioContent {
  new(annotations? : Annotations, String, String) -> Self
  raw_audio(Self) -> Bytes!
}
impl CallToolResultContent for AudioContent
impl CreateMessageResultContent for AudioContent
impl PromptMessageContent for AudioContent
impl SamplingMessageContent for AudioContent
impl Eq for AudioContent
impl Show for AudioContent
impl ToJson for AudioContent
impl @moonbitlang/core/json.FromJson for AudioContent

pub(all) struct BlobResourceContents {
  blob : String
  mimeType : String?
  uri : String
}
impl BlobResourceContents {
  new(String, mimeType? : String, String) -> Self
  raw_data(Self) -> Bytes!
}
impl EmbeddedResourceResource for BlobResourceContents
impl ReadResourceResultContents for BlobResourceContents
impl Eq for BlobResourceContents
impl Show for BlobResourceContents
impl ToJson for BlobResourceContents
impl @moonbitlang/core/json.FromJson for BlobResourceContents

pub(all) struct CallToolRequest {
  params : CallToolRequestParams
}
impl CallToolRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(CallToolRequestParams) -> Self
}
impl ClientRequest for CallToolRequest
impl MCPRequest for CallToolRequest
impl Eq for CallToolRequest
impl Show for CallToolRequest
impl ToJson for CallToolRequest
impl @moonbitlang/core/json.FromJson for CallToolRequest

pub(all) struct CallToolRequestParams {
  arguments : Json?
  name : String
}
impl CallToolRequestParams {
  new(arguments? : Json, String) -> Self
}
impl Eq for CallToolRequestParams
impl Show for CallToolRequestParams
impl ToJson for CallToolRequestParams
impl @moonbitlang/core/json.FromJson for CallToolRequestParams

pub(all) struct CallToolResult {
  _meta : Json?
  content : Array[&CallToolResultContent]
  isError : Bool?
}
impl CallToolResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, Array[&CallToolResultContent], isError? : Bool) -> Self
}
impl MCPResponse for CallToolResult
impl ServerResult for CallToolResult
impl Eq for CallToolResult
impl Show for CallToolResult
impl ToJson for CallToolResult
impl @moonbitlang/core/json.FromJson for CallToolResult

pub(all) struct CancelledNotification {
  params : CancelledNotificationParams
}
impl CancelledNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(CancelledNotificationParams) -> Self
}
impl ClientNotification for CancelledNotification
impl MCPNotification for CancelledNotification
impl ServerNotification for CancelledNotification
impl Eq for CancelledNotification
impl Show for CancelledNotification
impl ToJson for CancelledNotification
impl @moonbitlang/core/json.FromJson for CancelledNotification

pub(all) struct CancelledNotificationParams {
  reason : String?
  requestId : @jsonrpc2.ID
}
impl CancelledNotificationParams {
  new(reason? : String, @jsonrpc2.ID) -> Self
}
impl Eq for CancelledNotificationParams
impl Show for CancelledNotificationParams
impl ToJson for CancelledNotificationParams
impl @moonbitlang/core/json.FromJson for CancelledNotificationParams

pub(all) struct ClientCapabilities {
  experimental : Json?
  roots : ClientCapabilitiesRoots?
  sampling : Json?
}
impl ClientCapabilities {
  new(experimental? : Json, roots? : ClientCapabilitiesRoots, sampling? : Json) -> Self
}
impl Eq for ClientCapabilities
impl Show for ClientCapabilities
impl ToJson for ClientCapabilities
impl @moonbitlang/core/json.FromJson for ClientCapabilities

pub(all) struct ClientCapabilitiesRoots {
  listChanged : Bool?
}
impl ClientCapabilitiesRoots {
  new(listChanged? : Bool) -> Self
}
impl Eq for ClientCapabilitiesRoots
impl Show for ClientCapabilitiesRoots
impl ToJson for ClientCapabilitiesRoots
impl @moonbitlang/core/json.FromJson for ClientCapabilitiesRoots

pub(all) struct CompleteRequest {
  params : CompleteRequestParams
}
impl CompleteRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(CompleteRequestParams) -> Self
}
impl ClientRequest for CompleteRequest
impl MCPRequest for CompleteRequest
impl Eq for CompleteRequest
impl Show for CompleteRequest
impl ToJson for CompleteRequest
impl @moonbitlang/core/json.FromJson for CompleteRequest

pub(all) struct CompleteRequestParams {
  argument : CompleteRequestParamsArgument
  ref_ : &CompleteRequestParamsRef
}
impl CompleteRequestParams {
  new(CompleteRequestParamsArgument, &CompleteRequestParamsRef) -> Self
}
impl Eq for CompleteRequestParams
impl Show for CompleteRequestParams
impl ToJson for CompleteRequestParams
impl @moonbitlang/core/json.FromJson for CompleteRequestParams

pub(all) struct CompleteRequestParamsArgument {
  name : String
  value : String
}
impl CompleteRequestParamsArgument {
  new(String, String) -> Self
}
impl Eq for CompleteRequestParamsArgument
impl Show for CompleteRequestParamsArgument
impl ToJson for CompleteRequestParamsArgument
impl @moonbitlang/core/json.FromJson for CompleteRequestParamsArgument

pub(all) struct CompleteResult {
  _meta : Json?
  completion : CompleteResultCompletion
}
impl CompleteResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, CompleteResultCompletion) -> Self
}
impl MCPResponse for CompleteResult
impl ServerResult for CompleteResult
impl Eq for CompleteResult
impl Show for CompleteResult
impl ToJson for CompleteResult
impl @moonbitlang/core/json.FromJson for CompleteResult

pub(all) struct CompleteResultCompletion {
  hasMore : Bool?
  total : Int64?
  values : Array[String]
}
impl CompleteResultCompletion {
  new(hasMore? : Bool, total? : Int64, Array[String]) -> Self
}
impl Eq for CompleteResultCompletion
impl Show for CompleteResultCompletion
impl ToJson for CompleteResultCompletion
impl @moonbitlang/core/json.FromJson for CompleteResultCompletion

pub struct Context {
  start_time_unix_nanos : Int64
  timeout_millis : Int?
}
impl Context {
  new() -> Self
  with_timeout(Self, Int) -> Self
}

pub(all) struct CreateMessageRequest {
  params : CreateMessageRequestParams
}
impl CreateMessageRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(CreateMessageRequestParams) -> Self
}
impl MCPRequest for CreateMessageRequest
impl ServerRequest for CreateMessageRequest
impl Eq for CreateMessageRequest
impl Show for CreateMessageRequest
impl ToJson for CreateMessageRequest
impl @moonbitlang/core/json.FromJson for CreateMessageRequest

pub(all) struct CreateMessageRequestParams {
  includeContext : IncludeContext?
  maxTokens : Int64
  messages : Array[SamplingMessage]
  metadata : Json?
  modelPreferences : ModelPreferences?
  stopSequences : Array[String]?
  systemPrompt : String?
  temperature : Double?
}
impl CreateMessageRequestParams {
  new(includeContext? : IncludeContext, Int64, Array[SamplingMessage], metadata? : Json, modelPreferences? : ModelPreferences, stopSequences? : Array[String], systemPrompt? : String, temperature? : Double) -> Self
}
impl Eq for CreateMessageRequestParams
impl Show for CreateMessageRequestParams
impl ToJson for CreateMessageRequestParams
impl @moonbitlang/core/json.FromJson for CreateMessageRequestParams

pub(all) struct CreateMessageResult {
  _meta : Json?
  content : &CreateMessageResultContent
  model : String
  role : Role
  stopReason : String?
}
impl CreateMessageResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, &CreateMessageResultContent, String, Role, stopReason? : String) -> Self
}
impl ClientResult for CreateMessageResult
impl MCPResponse for CreateMessageResult
impl Eq for CreateMessageResult
impl Show for CreateMessageResult
impl ToJson for CreateMessageResult
impl @moonbitlang/core/json.FromJson for CreateMessageResult

pub(all) struct Cursor {
}
impl Cursor {
  new() -> Self
}
impl Eq for Cursor
impl Show for Cursor
impl ToJson for Cursor
impl @moonbitlang/core/json.FromJson for Cursor

pub(all) struct CustomResult {
  _meta : Json?
}
impl CustomResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json) -> Self
}
impl ClientResult for CustomResult
impl MCPResponse for CustomResult
impl ServerResult for CustomResult
impl Eq for CustomResult
impl Show for CustomResult
impl ToJson for CustomResult
impl @moonbitlang/core/json.FromJson for CustomResult

pub(all) struct EmbeddedResource {
  annotations : Annotations?
  resource : &EmbeddedResourceResource
}
impl EmbeddedResource {
  new(annotations? : Annotations, &EmbeddedResourceResource) -> Self
}
impl CallToolResultContent for EmbeddedResource
impl PromptMessageContent for EmbeddedResource
impl Eq for EmbeddedResource
impl Show for EmbeddedResource
impl ToJson for EmbeddedResource
impl @moonbitlang/core/json.FromJson for EmbeddedResource

pub(all) struct GetPromptRequest {
  params : GetPromptRequestParams
}
impl GetPromptRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(GetPromptRequestParams) -> Self
}
impl ClientRequest for GetPromptRequest
impl MCPRequest for GetPromptRequest
impl Eq for GetPromptRequest
impl Show for GetPromptRequest
impl ToJson for GetPromptRequest
impl @moonbitlang/core/json.FromJson for GetPromptRequest

pub(all) struct GetPromptRequestParams {
  arguments : Json?
  name : String
}
impl GetPromptRequestParams {
  new(arguments? : Json, String) -> Self
}
impl Eq for GetPromptRequestParams
impl Show for GetPromptRequestParams
impl ToJson for GetPromptRequestParams
impl @moonbitlang/core/json.FromJson for GetPromptRequestParams

pub(all) struct GetPromptResult {
  _meta : Json?
  description : String?
  messages : Array[PromptMessage]
}
impl GetPromptResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, description? : String, Array[PromptMessage]) -> Self
}
impl MCPResponse for GetPromptResult
impl ServerResult for GetPromptResult
impl Eq for GetPromptResult
impl Show for GetPromptResult
impl ToJson for GetPromptResult
impl @moonbitlang/core/json.FromJson for GetPromptResult

pub(all) struct ImageContent {
  annotations : Annotations?
  data : String
  mimeType : String
}
impl ImageContent {
  new(annotations? : Annotations, String, String) -> Self
  raw_image(Self) -> Bytes!
}
impl CallToolResultContent for ImageContent
impl CreateMessageResultContent for ImageContent
impl PromptMessageContent for ImageContent
impl SamplingMessageContent for ImageContent
impl Eq for ImageContent
impl Show for ImageContent
impl ToJson for ImageContent
impl @moonbitlang/core/json.FromJson for ImageContent

pub(all) struct Implementation {
  name : String
  version : String
}
impl Implementation {
  new(String, String) -> Self
}
impl Eq for Implementation
impl Show for Implementation
impl ToJson for Implementation
impl @moonbitlang/core/json.FromJson for Implementation

pub(all) enum IncludeContext {
  AllServers
  NoServers
  ThisServer
}
impl Eq for IncludeContext
impl Show for IncludeContext
impl ToJson for IncludeContext
impl @moonbitlang/core/json.FromJson for IncludeContext

pub(all) struct InitializeRequest {
  params : InitializeRequestParams
}
impl InitializeRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(InitializeRequestParams) -> Self
}
impl ClientRequest for InitializeRequest
impl MCPRequest for InitializeRequest
impl Eq for InitializeRequest
impl Show for InitializeRequest
impl ToJson for InitializeRequest
impl @moonbitlang/core/json.FromJson for InitializeRequest

pub(all) struct InitializeRequestParams {
  capabilities : ClientCapabilities
  clientInfo : Implementation
  protocolVersion : String
}
impl InitializeRequestParams {
  new(ClientCapabilities, Implementation, String) -> Self
}
impl Eq for InitializeRequestParams
impl Show for InitializeRequestParams
impl ToJson for InitializeRequestParams
impl @moonbitlang/core/json.FromJson for InitializeRequestParams

pub(all) struct InitializeResult {
  _meta : Json?
  capabilities : ServerCapabilities
  instructions : String?
  protocolVersion : String
  serverInfo : Implementation
}
impl InitializeResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, ServerCapabilities, instructions? : String, String, Implementation) -> Self
}
impl MCPResponse for InitializeResult
impl ServerResult for InitializeResult
impl Eq for InitializeResult
impl Show for InitializeResult
impl ToJson for InitializeResult
impl @moonbitlang/core/json.FromJson for InitializeResult

pub(all) struct InitializedNotification {
  params : InitializedNotificationParams?
}
impl InitializedNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(params? : InitializedNotificationParams) -> Self
}
impl ClientNotification for InitializedNotification
impl MCPNotification for InitializedNotification
impl Eq for InitializedNotification
impl Show for InitializedNotification
impl ToJson for InitializedNotification
impl @moonbitlang/core/json.FromJson for InitializedNotification

pub(all) struct InitializedNotificationParams {
  _meta : Json?
}
impl InitializedNotificationParams {
  new(_meta? : Json) -> Self
}
impl Eq for InitializedNotificationParams
impl Show for InitializedNotificationParams
impl ToJson for InitializedNotificationParams
impl @moonbitlang/core/json.FromJson for InitializedNotificationParams

pub(all) struct ListPromptsRequest {
  params : ListPromptsRequestParams?
}
impl ListPromptsRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(params? : ListPromptsRequestParams) -> Self
}
impl ClientRequest for ListPromptsRequest
impl MCPRequest for ListPromptsRequest
impl Eq for ListPromptsRequest
impl Show for ListPromptsRequest
impl ToJson for ListPromptsRequest
impl @moonbitlang/core/json.FromJson for ListPromptsRequest

pub(all) struct ListPromptsRequestParams {
  cursor : String?
}
impl ListPromptsRequestParams {
  new(cursor? : String) -> Self
}
impl Eq for ListPromptsRequestParams
impl Show for ListPromptsRequestParams
impl ToJson for ListPromptsRequestParams
impl @moonbitlang/core/json.FromJson for ListPromptsRequestParams

pub(all) struct ListPromptsResult {
  _meta : Json?
  nextCursor : String?
  prompts : Array[Prompt]
}
impl ListPromptsResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, nextCursor? : String, Array[Prompt]) -> Self
}
impl MCPResponse for ListPromptsResult
impl ServerResult for ListPromptsResult
impl Eq for ListPromptsResult
impl Show for ListPromptsResult
impl ToJson for ListPromptsResult
impl @moonbitlang/core/json.FromJson for ListPromptsResult

pub(all) struct ListResourceTemplatesRequest {
  params : ListResourceTemplatesRequestParams?
}
impl ListResourceTemplatesRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(params? : ListResourceTemplatesRequestParams) -> Self
}
impl MCPRequest for ListResourceTemplatesRequest
impl Eq for ListResourceTemplatesRequest
impl Show for ListResourceTemplatesRequest
impl ToJson for ListResourceTemplatesRequest
impl @moonbitlang/core/json.FromJson for ListResourceTemplatesRequest

pub(all) struct ListResourceTemplatesRequestParams {
  cursor : String?
}
impl ListResourceTemplatesRequestParams {
  new(cursor? : String) -> Self
}
impl Eq for ListResourceTemplatesRequestParams
impl Show for ListResourceTemplatesRequestParams
impl ToJson for ListResourceTemplatesRequestParams
impl @moonbitlang/core/json.FromJson for ListResourceTemplatesRequestParams

pub(all) struct ListResourceTemplatesResult {
  _meta : Json?
  nextCursor : String?
  resourceTemplates : Array[ResourceTemplate]
}
impl ListResourceTemplatesResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, nextCursor? : String, Array[ResourceTemplate]) -> Self
}
impl MCPResponse for ListResourceTemplatesResult
impl Eq for ListResourceTemplatesResult
impl Show for ListResourceTemplatesResult
impl ToJson for ListResourceTemplatesResult
impl @moonbitlang/core/json.FromJson for ListResourceTemplatesResult

pub(all) struct ListResourcesRequest {
  params : ListResourcesRequestParams?
}
impl ListResourcesRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(params? : ListResourcesRequestParams) -> Self
}
impl ClientRequest for ListResourcesRequest
impl MCPRequest for ListResourcesRequest
impl Eq for ListResourcesRequest
impl Show for ListResourcesRequest
impl ToJson for ListResourcesRequest
impl @moonbitlang/core/json.FromJson for ListResourcesRequest

pub(all) struct ListResourcesRequestParams {
  cursor : String?
}
impl ListResourcesRequestParams {
  new(cursor? : String) -> Self
}
impl Eq for ListResourcesRequestParams
impl Show for ListResourcesRequestParams
impl ToJson for ListResourcesRequestParams
impl @moonbitlang/core/json.FromJson for ListResourcesRequestParams

pub(all) struct ListResourcesResult {
  _meta : Json?
  nextCursor : String?
  resources : Array[Resource]
}
impl ListResourcesResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, nextCursor? : String, Array[Resource]) -> Self
}
impl MCPResponse for ListResourcesResult
impl ServerResult for ListResourcesResult
impl Eq for ListResourcesResult
impl Show for ListResourcesResult
impl ToJson for ListResourcesResult
impl @moonbitlang/core/json.FromJson for ListResourcesResult

pub(all) struct ListRootsRequest {
  params : ListRootsRequestParams?
}
impl ListRootsRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(params? : ListRootsRequestParams) -> Self
}
impl MCPRequest for ListRootsRequest
impl ServerRequest for ListRootsRequest
impl Eq for ListRootsRequest
impl Show for ListRootsRequest
impl ToJson for ListRootsRequest
impl @moonbitlang/core/json.FromJson for ListRootsRequest

pub(all) struct ListRootsRequestParams {
  _meta : ListRootsRequestParams_meta?
}
impl ListRootsRequestParams {
  new(_meta? : ListRootsRequestParams_meta) -> Self
}
impl Eq for ListRootsRequestParams
impl Show for ListRootsRequestParams
impl ToJson for ListRootsRequestParams
impl @moonbitlang/core/json.FromJson for ListRootsRequestParams

pub(all) struct ListRootsRequestParams_meta {
  progressToken : ProgressToken?
}
impl ListRootsRequestParams_meta {
  new(progressToken? : ProgressToken) -> Self
}
impl Eq for ListRootsRequestParams_meta
impl Show for ListRootsRequestParams_meta
impl ToJson for ListRootsRequestParams_meta
impl @moonbitlang/core/json.FromJson for ListRootsRequestParams_meta

pub(all) struct ListRootsResult {
  _meta : Json?
  roots : Array[Root]
}
impl ListRootsResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, Array[Root]) -> Self
}
impl ClientResult for ListRootsResult
impl MCPResponse for ListRootsResult
impl Eq for ListRootsResult
impl Show for ListRootsResult
impl ToJson for ListRootsResult
impl @moonbitlang/core/json.FromJson for ListRootsResult

pub(all) struct ListToolsRequest {
  params : ListToolsRequestParams?
}
impl ListToolsRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(params? : ListToolsRequestParams) -> Self
}
impl ClientRequest for ListToolsRequest
impl MCPRequest for ListToolsRequest
impl Eq for ListToolsRequest
impl Show for ListToolsRequest
impl ToJson for ListToolsRequest
impl @moonbitlang/core/json.FromJson for ListToolsRequest

pub(all) struct ListToolsRequestParams {
  cursor : String?
}
impl ListToolsRequestParams {
  new(cursor? : String) -> Self
}
impl Eq for ListToolsRequestParams
impl Show for ListToolsRequestParams
impl ToJson for ListToolsRequestParams
impl @moonbitlang/core/json.FromJson for ListToolsRequestParams

pub(all) struct ListToolsResult {
  _meta : Json?
  nextCursor : String?
  tools : Array[Tool]
}
impl ListToolsResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, nextCursor? : String, Array[Tool]) -> Self
}
impl MCPResponse for ListToolsResult
impl ServerResult for ListToolsResult
impl Eq for ListToolsResult
impl Show for ListToolsResult
impl ToJson for ListToolsResult
impl @moonbitlang/core/json.FromJson for ListToolsResult

pub(all) enum LoggingLevel {
  Alert
  Critical
  Debug
  Emergency
  Error
  Info
  Notice
  Warning
}
impl Eq for LoggingLevel
impl Show for LoggingLevel
impl ToJson for LoggingLevel
impl @moonbitlang/core/json.FromJson for LoggingLevel

pub(all) struct LoggingMessageNotification {
  params : LoggingMessageNotificationParams
}
impl LoggingMessageNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(LoggingMessageNotificationParams) -> Self
}
impl MCPNotification for LoggingMessageNotification
impl ServerNotification for LoggingMessageNotification
impl Eq for LoggingMessageNotification
impl Show for LoggingMessageNotification
impl ToJson for LoggingMessageNotification
impl @moonbitlang/core/json.FromJson for LoggingMessageNotification

pub(all) struct LoggingMessageNotificationParams {
  data : Json
  level : LoggingLevel
  logger : String?
}
impl LoggingMessageNotificationParams {
  new(Json, LoggingLevel, logger? : String) -> Self
}
impl Eq for LoggingMessageNotificationParams
impl Show for LoggingMessageNotificationParams
impl ToJson for LoggingMessageNotificationParams
impl @moonbitlang/core/json.FromJson for LoggingMessageNotificationParams

pub(all) struct ModelHint {
  name : String?
}
impl ModelHint {
  new(name? : String) -> Self
}
impl Eq for ModelHint
impl Show for ModelHint
impl ToJson for ModelHint
impl @moonbitlang/core/json.FromJson for ModelHint

pub(all) struct ModelPreferences {
  costPriority : Double?
  hints : Array[ModelHint]?
  intelligencePriority : Double?
  speedPriority : Double?
}
impl ModelPreferences {
  new(costPriority? : Double, hints? : Array[ModelHint], intelligencePriority? : Double, speedPriority? : Double) -> Self
}
impl Eq for ModelPreferences
impl Show for ModelPreferences
impl ToJson for ModelPreferences
impl @moonbitlang/core/json.FromJson for ModelPreferences

pub(all) struct Notification {
  method_ : String
  params : NotificationParams?
}
impl Notification {
  from_message(@jsonrpc2.Message) -> Self?
  new(String, params? : NotificationParams) -> Self
}
impl MCPNotification for Notification
impl Eq for Notification
impl Show for Notification
impl ToJson for Notification
impl @moonbitlang/core/json.FromJson for Notification

pub(all) struct NotificationParams {
  _meta : Json?
}
impl NotificationParams {
  new(_meta? : Json) -> Self
}
impl Eq for NotificationParams
impl Show for NotificationParams
impl ToJson for NotificationParams
impl @moonbitlang/core/json.FromJson for NotificationParams

pub(all) struct PaginatedRequest {
  method_ : String
  params : PaginatedRequestParams?
}
impl PaginatedRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(String, params? : PaginatedRequestParams) -> Self
}
impl MCPRequest for PaginatedRequest
impl Eq for PaginatedRequest
impl Show for PaginatedRequest
impl ToJson for PaginatedRequest
impl @moonbitlang/core/json.FromJson for PaginatedRequest

pub(all) struct PaginatedRequestParams {
  cursor : String?
}
impl PaginatedRequestParams {
  new(cursor? : String) -> Self
}
impl Eq for PaginatedRequestParams
impl Show for PaginatedRequestParams
impl ToJson for PaginatedRequestParams
impl @moonbitlang/core/json.FromJson for PaginatedRequestParams

pub(all) struct PaginatedResult {
  _meta : Json?
  nextCursor : String?
}
impl PaginatedResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, nextCursor? : String) -> Self
}
impl MCPResponse for PaginatedResult
impl Eq for PaginatedResult
impl Show for PaginatedResult
impl ToJson for PaginatedResult
impl @moonbitlang/core/json.FromJson for PaginatedResult

pub(all) struct PingRequest {
  params : PingRequestParams?
}
impl PingRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(params? : PingRequestParams) -> Self
}
impl ClientRequest for PingRequest
impl MCPRequest for PingRequest
impl ServerRequest for PingRequest
impl Eq for PingRequest
impl Show for PingRequest
impl ToJson for PingRequest
impl @moonbitlang/core/json.FromJson for PingRequest

pub(all) struct PingRequestParams {
  _meta : PingRequestParams_meta?
}
impl PingRequestParams {
  new(_meta? : PingRequestParams_meta) -> Self
}
impl Eq for PingRequestParams
impl Show for PingRequestParams
impl ToJson for PingRequestParams
impl @moonbitlang/core/json.FromJson for PingRequestParams

pub(all) struct PingRequestParams_meta {
  progressToken : ProgressToken?
}
impl PingRequestParams_meta {
  new(progressToken? : ProgressToken) -> Self
}
impl Eq for PingRequestParams_meta
impl Show for PingRequestParams_meta
impl ToJson for PingRequestParams_meta
impl @moonbitlang/core/json.FromJson for PingRequestParams_meta

pub(all) struct ProgressNotification {
  params : ProgressNotificationParams
}
impl ProgressNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(ProgressNotificationParams) -> Self
}
impl ClientNotification for ProgressNotification
impl MCPNotification for ProgressNotification
impl ServerNotification for ProgressNotification
impl Eq for ProgressNotification
impl Show for ProgressNotification
impl ToJson for ProgressNotification
impl @moonbitlang/core/json.FromJson for ProgressNotification

pub(all) struct ProgressNotificationParams {
  message : String?
  progress : Double
  progressToken : ProgressToken
  total : Double?
}
impl ProgressNotificationParams {
  new(message? : String, Double, ProgressToken, total? : Double) -> Self
}
impl Eq for ProgressNotificationParams
impl Show for ProgressNotificationParams
impl ToJson for ProgressNotificationParams
impl @moonbitlang/core/json.FromJson for ProgressNotificationParams

pub(all) struct ProgressToken {
}
impl ProgressToken {
  new() -> Self
}
impl Eq for ProgressToken
impl Show for ProgressToken
impl ToJson for ProgressToken
impl @moonbitlang/core/json.FromJson for ProgressToken

pub(all) struct Prompt {
  arguments : Array[PromptArgument]?
  description : String?
  name : String
}
impl Prompt {
  new(arguments? : Array[PromptArgument], description? : String, String) -> Self
}
impl Eq for Prompt
impl Show for Prompt
impl ToJson for Prompt
impl @moonbitlang/core/json.FromJson for Prompt

pub(all) struct PromptArgument {
  description : String?
  name : String
  required : Bool?
}
impl PromptArgument {
  new(description? : String, String, required? : Bool) -> Self
}
impl Eq for PromptArgument
impl Show for PromptArgument
impl ToJson for PromptArgument
impl @moonbitlang/core/json.FromJson for PromptArgument

pub(all) type PromptFunc (PromptMessage) -> GetPromptResult

pub(all) struct PromptListChangedNotification {
  params : PromptListChangedNotificationParams?
}
impl PromptListChangedNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(params? : PromptListChangedNotificationParams) -> Self
}
impl MCPNotification for PromptListChangedNotification
impl ServerNotification for PromptListChangedNotification
impl Eq for PromptListChangedNotification
impl Show for PromptListChangedNotification
impl ToJson for PromptListChangedNotification
impl @moonbitlang/core/json.FromJson for PromptListChangedNotification

pub(all) struct PromptListChangedNotificationParams {
  _meta : Json?
}
impl PromptListChangedNotificationParams {
  new(_meta? : Json) -> Self
}
impl Eq for PromptListChangedNotificationParams
impl Show for PromptListChangedNotificationParams
impl ToJson for PromptListChangedNotificationParams
impl @moonbitlang/core/json.FromJson for PromptListChangedNotificationParams

pub(all) struct PromptMessage {
  content : &PromptMessageContent
  role : Role
}
impl PromptMessage {
  new(&PromptMessageContent, Role) -> Self
}
impl Eq for PromptMessage
impl Show for PromptMessage
impl ToJson for PromptMessage
impl @moonbitlang/core/json.FromJson for PromptMessage

pub(all) struct PromptReference {
  name : String
}
impl PromptReference {
  new(String) -> Self
}
impl CompleteRequestParamsRef for PromptReference
impl Eq for PromptReference
impl Show for PromptReference
impl ToJson for PromptReference
impl @moonbitlang/core/json.FromJson for PromptReference

pub(all) struct ReadResourceRequest {
  params : ReadResourceRequestParams
}
impl ReadResourceRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(ReadResourceRequestParams) -> Self
}
impl ClientRequest for ReadResourceRequest
impl MCPRequest for ReadResourceRequest
impl Eq for ReadResourceRequest
impl Show for ReadResourceRequest
impl ToJson for ReadResourceRequest
impl @moonbitlang/core/json.FromJson for ReadResourceRequest

pub(all) struct ReadResourceRequestParams {
  uri : String
}
impl ReadResourceRequestParams {
  new(String) -> Self
}
impl Eq for ReadResourceRequestParams
impl Show for ReadResourceRequestParams
impl ToJson for ReadResourceRequestParams
impl @moonbitlang/core/json.FromJson for ReadResourceRequestParams

pub(all) struct ReadResourceResult {
  _meta : Json?
  contents : Array[&ReadResourceResultContents]
}
impl ReadResourceResult {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(_meta? : Json, Array[&ReadResourceResultContents]) -> Self
}
impl MCPResponse for ReadResourceResult
impl ServerResult for ReadResourceResult
impl Eq for ReadResourceResult
impl Show for ReadResourceResult
impl ToJson for ReadResourceResult
impl @moonbitlang/core/json.FromJson for ReadResourceResult

pub(all) struct Request {
  method_ : String
  params : RequestParams?
}
impl Request {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(String, params? : RequestParams) -> Self
}
impl MCPRequest for Request
impl Eq for Request
impl Show for Request
impl ToJson for Request
impl @moonbitlang/core/json.FromJson for Request

pub(all) struct RequestParams {
  _meta : RequestParams_meta?
}
impl RequestParams {
  new(_meta? : RequestParams_meta) -> Self
}
impl Eq for RequestParams
impl Show for RequestParams
impl ToJson for RequestParams
impl @moonbitlang/core/json.FromJson for RequestParams

pub(all) struct RequestParams_meta {
  progressToken : ProgressToken?
}
impl RequestParams_meta {
  new(progressToken? : ProgressToken) -> Self
}
impl Eq for RequestParams_meta
impl Show for RequestParams_meta
impl ToJson for RequestParams_meta
impl @moonbitlang/core/json.FromJson for RequestParams_meta

pub(all) struct Resource {
  annotations : Annotations?
  description : String?
  mimeType : String?
  name : String
  size : Int64?
  uri : String
}
impl Resource {
  new(annotations? : Annotations, description? : String, mimeType? : String, String, size? : Int64, String) -> Self
}
impl Eq for Resource
impl Show for Resource
impl ToJson for Resource
impl @moonbitlang/core/json.FromJson for Resource

pub(all) struct ResourceContents {
  mimeType : String?
  uri : String
}
impl ResourceContents {
  new(mimeType? : String, String) -> Self
}
impl Eq for ResourceContents
impl Show for ResourceContents
impl ToJson for ResourceContents
impl @moonbitlang/core/json.FromJson for ResourceContents

pub(all) type ResourceFunc (ReadResourceRequest) -> ReadResourceResult

pub(all) struct ResourceListChangedNotification {
  params : ResourceListChangedNotificationParams?
}
impl ResourceListChangedNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(params? : ResourceListChangedNotificationParams) -> Self
}
impl MCPNotification for ResourceListChangedNotification
impl ServerNotification for ResourceListChangedNotification
impl Eq for ResourceListChangedNotification
impl Show for ResourceListChangedNotification
impl ToJson for ResourceListChangedNotification
impl @moonbitlang/core/json.FromJson for ResourceListChangedNotification

pub(all) struct ResourceListChangedNotificationParams {
  _meta : Json?
}
impl ResourceListChangedNotificationParams {
  new(_meta? : Json) -> Self
}
impl Eq for ResourceListChangedNotificationParams
impl Show for ResourceListChangedNotificationParams
impl ToJson for ResourceListChangedNotificationParams
impl @moonbitlang/core/json.FromJson for ResourceListChangedNotificationParams

pub(all) struct ResourceReference {
  uri : String
}
impl ResourceReference {
  new(String) -> Self
}
impl CompleteRequestParamsRef for ResourceReference
impl Eq for ResourceReference
impl Show for ResourceReference
impl ToJson for ResourceReference
impl @moonbitlang/core/json.FromJson for ResourceReference

pub(all) struct ResourceTemplate {
  annotations : Annotations?
  description : String?
  mimeType : String?
  name : String
  uriTemplate : String
}
impl ResourceTemplate {
  new(annotations? : Annotations, description? : String, mimeType? : String, String, String) -> Self
}
impl Eq for ResourceTemplate
impl Show for ResourceTemplate
impl ToJson for ResourceTemplate
impl @moonbitlang/core/json.FromJson for ResourceTemplate

pub(all) struct ResourceUpdatedNotification {
  params : ResourceUpdatedNotificationParams
}
impl ResourceUpdatedNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(ResourceUpdatedNotificationParams) -> Self
}
impl MCPNotification for ResourceUpdatedNotification
impl ServerNotification for ResourceUpdatedNotification
impl Eq for ResourceUpdatedNotification
impl Show for ResourceUpdatedNotification
impl ToJson for ResourceUpdatedNotification
impl @moonbitlang/core/json.FromJson for ResourceUpdatedNotification

pub(all) struct ResourceUpdatedNotificationParams {
  uri : String
}
impl ResourceUpdatedNotificationParams {
  new(String) -> Self
}
impl Eq for ResourceUpdatedNotificationParams
impl Show for ResourceUpdatedNotificationParams
impl ToJson for ResourceUpdatedNotificationParams
impl @moonbitlang/core/json.FromJson for ResourceUpdatedNotificationParams

pub(all) enum Role {
  Assistant
  User
}
impl Eq for Role
impl Show for Role
impl ToJson for Role
impl @moonbitlang/core/json.FromJson for Role

pub(all) struct Root {
  name : String?
  uri : String
}
impl Root {
  new(name? : String, String) -> Self
}
impl Eq for Root
impl Show for Root
impl ToJson for Root
impl @moonbitlang/core/json.FromJson for Root

pub(all) struct RootsListChangedNotification {
  params : RootsListChangedNotificationParams?
}
impl RootsListChangedNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(params? : RootsListChangedNotificationParams) -> Self
}
impl ClientNotification for RootsListChangedNotification
impl MCPNotification for RootsListChangedNotification
impl Eq for RootsListChangedNotification
impl Show for RootsListChangedNotification
impl ToJson for RootsListChangedNotification
impl @moonbitlang/core/json.FromJson for RootsListChangedNotification

pub(all) struct RootsListChangedNotificationParams {
  _meta : Json?
}
impl RootsListChangedNotificationParams {
  new(_meta? : Json) -> Self
}
impl Eq for RootsListChangedNotificationParams
impl Show for RootsListChangedNotificationParams
impl ToJson for RootsListChangedNotificationParams
impl @moonbitlang/core/json.FromJson for RootsListChangedNotificationParams

pub(all) struct SamplingMessage {
  content : &SamplingMessageContent
  role : Role
}
impl SamplingMessage {
  new(&SamplingMessageContent, Role) -> Self
}
impl Eq for SamplingMessage
impl Show for SamplingMessage
impl ToJson for SamplingMessage
impl @moonbitlang/core/json.FromJson for SamplingMessage

pub struct Server {
  prompts : Map[String, PromptFunc]
  resources : Map[String, ResourceFunc]
  tools : Map[String, ServerTool]
  mut transport : &Transport
}
impl Server {
  new() -> Self
  run(Self) -> Unit
  with_prompt(Self, String, String, PromptFunc) -> Unit
  with_resource(Self, String, String, String, String, ResourceFunc) -> Unit
  with_stdio_transport(Self, &Transport) -> Unit
  with_tool(Self, &MCPTool, list_changed~ : Bool = ..) -> Unit
}

pub(all) struct ServerCapabilities {
  completions : Json?
  experimental : Json?
  logging : Json?
  prompts : ServerCapabilitiesPrompts?
  resources : ServerCapabilitiesResources?
  tools : ServerCapabilitiesTools?
}
impl ServerCapabilities {
  new(completions? : Json, experimental? : Json, logging? : Json, prompts? : ServerCapabilitiesPrompts, resources? : ServerCapabilitiesResources, tools? : ServerCapabilitiesTools) -> Self
}
impl Eq for ServerCapabilities
impl Show for ServerCapabilities
impl ToJson for ServerCapabilities
impl @moonbitlang/core/json.FromJson for ServerCapabilities

pub(all) struct ServerCapabilitiesPrompts {
  listChanged : Bool?
}
impl ServerCapabilitiesPrompts {
  new(listChanged? : Bool) -> Self
}
impl Eq for ServerCapabilitiesPrompts
impl Show for ServerCapabilitiesPrompts
impl ToJson for ServerCapabilitiesPrompts
impl @moonbitlang/core/json.FromJson for ServerCapabilitiesPrompts

pub(all) struct ServerCapabilitiesResources {
  listChanged : Bool?
  subscribe : Bool?
}
impl ServerCapabilitiesResources {
  new(listChanged? : Bool, subscribe? : Bool) -> Self
}
impl Eq for ServerCapabilitiesResources
impl Show for ServerCapabilitiesResources
impl ToJson for ServerCapabilitiesResources
impl @moonbitlang/core/json.FromJson for ServerCapabilitiesResources

pub(all) struct ServerCapabilitiesTools {
  listChanged : Bool?
}
impl ServerCapabilitiesTools {
  new(listChanged? : Bool) -> Self
}
impl Eq for ServerCapabilitiesTools
impl Show for ServerCapabilitiesTools
impl ToJson for ServerCapabilitiesTools
impl @moonbitlang/core/json.FromJson for ServerCapabilitiesTools

pub struct ServerTool {
  tool : &MCPTool
  list_changed : Bool
}

pub(all) struct SetLevelRequest {
  params : SetLevelRequestParams
}
impl SetLevelRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(SetLevelRequestParams) -> Self
}
impl ClientRequest for SetLevelRequest
impl MCPRequest for SetLevelRequest
impl Eq for SetLevelRequest
impl Show for SetLevelRequest
impl ToJson for SetLevelRequest
impl @moonbitlang/core/json.FromJson for SetLevelRequest

pub(all) struct SetLevelRequestParams {
  level : LoggingLevel
}
impl SetLevelRequestParams {
  new(LoggingLevel) -> Self
}
impl Eq for SetLevelRequestParams
impl Show for SetLevelRequestParams
impl ToJson for SetLevelRequestParams
impl @moonbitlang/core/json.FromJson for SetLevelRequestParams

pub struct StdioTransport {
  mut default_timeout_millis : Int
  mut max_timeout_millis : Int
  mut last_id : Int64
  mut close_handler : (() -> Unit)?
  mut error_handler : ((TransportError) -> Unit)?
  mut message_handler : ((Context, @jsonrpc2.Message) -> Unit)?
  mut reader : &@jsonrpc2.Reader?
  mut writer : &@jsonrpc2.Writer?
  in_flight_requests : Map[Int64, Context]
}
impl StdioTransport {
  new() -> Self
}
impl @gmlewis/io.ByteReader for StdioTransport
impl @gmlewis/io.Writer for StdioTransport
impl Transport for StdioTransport

pub(all) struct SubscribeRequest {
  params : SubscribeRequestParams
}
impl SubscribeRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(SubscribeRequestParams) -> Self
}
impl ClientRequest for SubscribeRequest
impl MCPRequest for SubscribeRequest
impl Eq for SubscribeRequest
impl Show for SubscribeRequest
impl ToJson for SubscribeRequest
impl @moonbitlang/core/json.FromJson for SubscribeRequest

pub(all) struct SubscribeRequestParams {
  uri : String
}
impl SubscribeRequestParams {
  new(String) -> Self
}
impl Eq for SubscribeRequestParams
impl Show for SubscribeRequestParams
impl ToJson for SubscribeRequestParams
impl @moonbitlang/core/json.FromJson for SubscribeRequestParams

pub(all) struct TextContent {
  annotations : Annotations?
  text : String
}
impl TextContent {
  new(annotations? : Annotations, String) -> Self
}
impl CallToolResultContent for TextContent
impl CreateMessageResultContent for TextContent
impl PromptMessageContent for TextContent
impl SamplingMessageContent for TextContent
impl Eq for TextContent
impl Show for TextContent
impl ToJson for TextContent
impl @moonbitlang/core/json.FromJson for TextContent

pub(all) struct TextResourceContents {
  mimeType : String?
  text : String
  uri : String
}
impl TextResourceContents {
  new(mimeType? : String, String, String) -> Self
}
impl EmbeddedResourceResource for TextResourceContents
impl ReadResourceResultContents for TextResourceContents
impl Eq for TextResourceContents
impl Show for TextResourceContents
impl ToJson for TextResourceContents
impl @moonbitlang/core/json.FromJson for TextResourceContents

type TimeSpec

pub(all) struct Tool {
  annotations : ToolAnnotations?
  description : String?
  inputSchema : ToolInputSchema
  name : String
}
impl Tool {
  new(annotations? : ToolAnnotations, description? : String, ToolInputSchema, String) -> Self
}
impl Eq for Tool
impl Show for Tool
impl ToJson for Tool
impl @moonbitlang/core/json.FromJson for Tool

pub(all) struct ToolAnnotations {
  destructiveHint : Bool?
  idempotentHint : Bool?
  openWorldHint : Bool?
  readOnlyHint : Bool?
  title : String?
}
impl ToolAnnotations {
  new(destructiveHint? : Bool, idempotentHint? : Bool, openWorldHint? : Bool, readOnlyHint? : Bool, title? : String) -> Self
}
impl Eq for ToolAnnotations
impl Show for ToolAnnotations
impl ToJson for ToolAnnotations
impl @moonbitlang/core/json.FromJson for ToolAnnotations

pub(all) struct ToolInputSchema {
  properties : Json?
  required : Array[String]?
}
impl ToolInputSchema {
  new(properties? : Json, required? : Array[String]) -> Self
}
impl Eq for ToolInputSchema
impl Show for ToolInputSchema
impl ToJson for ToolInputSchema
impl @moonbitlang/core/json.FromJson for ToolInputSchema

pub(all) struct ToolListChangedNotification {
  params : ToolListChangedNotificationParams?
}
impl ToolListChangedNotification {
  from_message(@jsonrpc2.Message) -> Self?
  new(params? : ToolListChangedNotificationParams) -> Self
}
impl MCPNotification for ToolListChangedNotification
impl ServerNotification for ToolListChangedNotification
impl Eq for ToolListChangedNotification
impl Show for ToolListChangedNotification
impl ToJson for ToolListChangedNotification
impl @moonbitlang/core/json.FromJson for ToolListChangedNotification

pub(all) struct ToolListChangedNotificationParams {
  _meta : Json?
}
impl ToolListChangedNotificationParams {
  new(_meta? : Json) -> Self
}
impl Eq for ToolListChangedNotificationParams
impl Show for ToolListChangedNotificationParams
impl ToJson for ToolListChangedNotificationParams
impl @moonbitlang/core/json.FromJson for ToolListChangedNotificationParams

pub type! TransportError String
impl Eq for TransportError
impl Show for TransportError

pub(all) struct UnsubscribeRequest {
  params : UnsubscribeRequestParams
}
impl UnsubscribeRequest {
  from_message(@jsonrpc2.Message) -> (@jsonrpc2.ID, Self)?
  new(UnsubscribeRequestParams) -> Self
}
impl ClientRequest for UnsubscribeRequest
impl MCPRequest for UnsubscribeRequest
impl Eq for UnsubscribeRequest
impl Show for UnsubscribeRequest
impl ToJson for UnsubscribeRequest
impl @moonbitlang/core/json.FromJson for UnsubscribeRequest

pub(all) struct UnsubscribeRequestParams {
  uri : String
}
impl UnsubscribeRequestParams {
  new(String) -> Self
}
impl Eq for UnsubscribeRequestParams
impl Show for UnsubscribeRequestParams
impl ToJson for UnsubscribeRequestParams
impl @moonbitlang/core/json.FromJson for UnsubscribeRequestParams

impl Eq for &CallToolResultContent
impl @moonbitlang/core/json.FromJson for &CallToolResultContent

impl Eq for &ClientNotification
impl @moonbitlang/core/json.FromJson for &ClientNotification

impl Eq for &ClientRequest
impl @moonbitlang/core/json.FromJson for &ClientRequest

impl Eq for &ClientResult
impl @moonbitlang/core/json.FromJson for &ClientResult

impl Eq for &CompleteRequestParamsRef
impl @moonbitlang/core/json.FromJson for &CompleteRequestParamsRef

impl Eq for &CreateMessageResultContent
impl @moonbitlang/core/json.FromJson for &CreateMessageResultContent

impl Eq for &EmbeddedResourceResource
impl @moonbitlang/core/json.FromJson for &EmbeddedResourceResource

impl Eq for &PromptMessageContent
impl @moonbitlang/core/json.FromJson for &PromptMessageContent

impl Eq for &ReadResourceResultContents
impl @moonbitlang/core/json.FromJson for &ReadResourceResultContents

impl Eq for &SamplingMessageContent
impl @moonbitlang/core/json.FromJson for &SamplingMessageContent

impl Eq for &ServerNotification
impl @moonbitlang/core/json.FromJson for &ServerNotification

impl Eq for &ServerRequest
impl @moonbitlang/core/json.FromJson for &ServerRequest

impl Eq for &ServerResult
impl @moonbitlang/core/json.FromJson for &ServerResult

// Type aliases

// Traits
pub trait CallToolResultContent : Show + ToJson {
  unused(Self) -> Unit
}

pub trait ClientNotification : Show + ToJson {
  unused(Self) -> Unit
}

pub trait ClientRequest : Show + ToJson {
  unused(Self) -> Unit
}

pub trait ClientResult : Show + ToJson {
  unused(Self) -> Unit
}

pub trait CompleteRequestParamsRef : Show + ToJson {
  unused(Self) -> Unit
}

pub trait CreateMessageResultContent : Show + ToJson {
  unused(Self) -> Unit
}

pub trait EmbeddedResourceResource : Show + ToJson {
  unused(Self) -> Unit
}

pub trait MCPNotification {
  to_notification(Self) -> @jsonrpc2.Message
}

pub trait MCPRequest {
  to_call(Self, @jsonrpc2.ID) -> @jsonrpc2.Message
}

pub trait MCPResponse {
  to_response(Self, @jsonrpc2.ID) -> @jsonrpc2.Message
}

pub(open) trait MCPTool {
  as_tool(Self) -> Tool
  call_tool(Self, Json?) -> CallToolResult
}

pub trait PromptMessageContent : Show + ToJson {
  unused(Self) -> Unit
}

pub trait ReadResourceResultContents : Show + ToJson {
  unused(Self) -> Unit
}

pub trait SamplingMessageContent : Show + ToJson {
  unused(Self) -> Unit
}

pub trait ServerNotification : Show + ToJson {
  unused(Self) -> Unit
}

pub trait ServerRequest : Show + ToJson {
  unused(Self) -> Unit
}

pub trait ServerResult : Show + ToJson {
  unused(Self) -> Unit
}

pub trait Transport {
  start(Self, Context) -> TransportError?
  send_request(Self, Context, &MCPRequest) -> TransportError?
  send_notification(Self, Context, &MCPNotification) -> TransportError?
  send_response(Self, Context, @jsonrpc2.ID, &MCPResponse) -> TransportError?
  close(Self) -> TransportError?
  with_close_handler(Self, () -> Unit) -> Unit
  with_error_handler(Self, (TransportError) -> Unit) -> Unit
  with_message_handler(Self, (Context, @jsonrpc2.Message) -> Unit) -> Unit
  with_timeout(Self, Int) -> Unit
  with_max_timeout(Self, Int) -> Unit
}

